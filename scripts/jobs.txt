for i in $(seq 1 1 10); do seed=$(( ( RANDOM % 10000 )  + 1 )); python main.py --seed $seed -D TU --cv_folds 10 --n_nodes 25 --epochs 50 --lr_decay_step 25,35,45 --test_batch_size 100 -f 64,64,64 -K 3 --aggregation mean --n_hidden 0 --readout max --dropout 0.1 --pool attn_unsup_threshold_skip_skip_0 --pool_arch fc_prev --results /mnt/data/bknyazev/checkpoints/ --data_dir /mnt/data/bknyazev/data/graph_data/PROTEINS | tee results/proteins_unsup_10fold/proteins_seed"$seed".log; done


for folds in 5 and 10; do for n_nodes in 200 300; do for i in $(seq 1 1 10); do seed=$(( ( RANDOM % 10000 )  + 1 )); python main.py --seed $seed -D TU --cv_folds $folds --n_nodes $n_nodes --epochs 50 --lr_decay_step 25,35,45 --test_batch_size 10 -f 64,64,64 -K 3 --aggregation mean --n_hidden 0 --readout max --dropout 0.1 --pool attn_unsup_threshold_skip_skip_0 --pool_arch fc_prev --results /mnt/data/bknyazev/checkpoints/ --data_dir /mnt/data/bknyazev/data/graph_data/DD | tee results/dd_unsup_"$n_nodes"nodes_"$folds"fold/dd_seed"$seed".log;  done; done; done


for folds in 5 and 10; do for n_nodes in 200 300; do for i in $(seq 1 1 10); do seed=$(( ( RANDOM % 10000 )  + 1 )); python main.py --seed $seed -D TU --cv_folds $folds --n_nodes $n_nodes --epochs 50 --lr_decay_step 25,35,45 --test_batch_size 10 -f 64,64,64 -K 3 --aggregation mean --n_hidden 0 --readout max --dropout 0.1 --pool attn_sup_threshold_skip_skip_0 --pool_arch fc_prev --results /mnt/data/bknyazev/checkpoints/ --data_dir /mnt/data/bknyazev/data/graph_data/DD | tee results/dd_wsup_"$n_nodes"nodes_"$folds"fold/dd_seed"$seed".log;  done; done; done


for folds in 5 and 10; for i in $(seq 1 1 10); do seed=$(( ( RANDOM % 10000 )  + 1 )); python main.py --seed $seed -D TU --cv_folds $folds --n_nodes 35 --epochs 50 --lr_decay_step 25,35,45 --test_batch_size 50 -f 64,64,64 -K 3 --aggregation mean --n_hidden 0 --readout max --dropout 0.1 --pool attn_sup_threshold_skip_skip_0 --pool_arch fc_prev --results /mnt/data/bknyazev/checkpoints/ --data_dir /mnt/data/bknyazev/data/graph_data/COLLAB | tee results/collab_wsup_"$folds"fold/collab_seed"$seed".log;  done; done



for folds in 10; do for n_nodes in 35; do for i in $(seq 1 1 10); do seed=$(( ( RANDOM % 10000 )  + 1 )); python main.py --seed $seed -D TU --cv_folds $folds --n_nodes $n_nodes --epochs 50 --lr_decay_step 25,35,45 --test_batch_size 10 -f 64,64,64 -K 3 --aggregation mean --n_hidden 0 --readout max --dropout 0.1 --pool attn_unsup_threshold_skip_skip_0 --pool_arch fc_prev_32 --results /mnt/data/bknyazev/checkpoints/ --data_dir /mnt/data/bknyazev/data/graph_data/COLLAB | tee results/collab_unsup_"$folds"fold_fc32/collab_seed"$seed".log;  done; done; done


for folds in 10; do for n_nodes in 35; do for i in $(seq 1 1 10); do seed=$(( ( RANDOM % 10000 )  + 1 )); python main.py --seed $seed -D TU --cv_folds $folds --n_nodes $n_nodes --epochs 50 --lr_decay_step 25,35,45 --test_batch_size 10 -f 64,64,64 -K 3 --aggregation mean --n_hidden 0 --readout max --dropout 0.1 --pool attn_sup_threshold_skip_skip_0 --pool_arch fc_prev_32 --results /mnt/data/bknyazev/checkpoints/ --data_dir /mnt/data/bknyazev/data/graph_data/COLLAB | tee results/collab_wsup_"$folds"fold_fc32/collab_seed"$seed".log;  done; done; done
